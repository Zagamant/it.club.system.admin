[{"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\App.js":"1","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\CustomAuthProvider.jsx":"2","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\index.js":"3","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\CustomDataProvider.jsx":"4","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\User.js":"5","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\services\\user.service.js":"6","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\helpers\\authHeader.js":"7","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\reportWebVitals.js":"8","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\helpers\\index.js":"9","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Club.js":"10","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\AdminPage.jsx":"11","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Room.js":"12","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Group.js":"13"},{"size":137,"mtime":1608774352118,"results":"14","hashOfConfig":"15"},{"size":946,"mtime":1610898792106,"results":"16","hashOfConfig":"15"},{"size":461,"mtime":1610812554695,"results":"17","hashOfConfig":"15"},{"size":5677,"mtime":1610898792120,"results":"18","hashOfConfig":"15"},{"size":3331,"mtime":1610901074318,"results":"19","hashOfConfig":"15"},{"size":2508,"mtime":1610899430790,"results":"20","hashOfConfig":"15"},{"size":277,"mtime":1608772991588,"results":"21","hashOfConfig":"15"},{"size":362,"mtime":1608771305093,"results":"22","hashOfConfig":"15"},{"size":29,"mtime":1608772806110,"results":"23","hashOfConfig":"15"},{"size":3025,"mtime":1610904588406,"results":"24","hashOfConfig":"15"},{"size":1668,"mtime":1610898565712,"results":"25","hashOfConfig":"15"},{"size":3138,"mtime":1610905179969,"results":"26","hashOfConfig":"15"},{"size":4453,"mtime":1610899509192,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"f4z56b",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\App.js",[],["57","58"],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\CustomAuthProvider.jsx",["59","60"],"import { userService} from \"../../services/user.service\"\r\n\r\nexport default {\r\n\r\n    login: ({username, password}) => {\r\n\r\n    return userService.login(username, password)\r\n            .then(response => {\r\n                debugger;\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.data;\r\n            });\r\n    },\r\n    checkError: (error) => {\r\n        console.error(error)\r\n    },\r\n    checkAuth: () => {\r\n        return localStorage.getItem('user') ? Promise.resolve() : Promise.reject();\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('user');\r\n        return Promise.resolve();\r\n    },\r\n    getIdentity: (error) => {\r\n    },\r\n    getPermissions: () => {\r\n        return Promise.resolve();\r\n        const role = localStorage.getItem('permissions');\r\n        return role ? Promise.resolve(role) : Promise.reject();\r\n    }\r\n};","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\index.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\CustomDataProvider.jsx",["61"],"import {\n    CREATE,\n    DELETE,\n    DELETE_MANY,\n    fetchUtils,\n    GET_LIST,\n    GET_MANY,\n    GET_MANY_REFERENCE,\n    GET_ONE,\n    UPDATE,\n    UPDATE_MANY,\n} from 'react-admin';\nimport axios from 'axios';\nimport { authHeader } from '../../helpers';\n\n/**\n * Maps react-admin queries to a REST API implemented\n *\n * @example\n * GET_LIST     => GET http://my.api.url/posts?page=0&pageSize=10\n * GET_ONE      => GET http://my.api.url/posts/123\n * GET_MANY     => GET http://my.api.url/posts?id=1234&id=5678\n * UPDATE       => PUT http://my.api.url/posts/123\n * CREATE       => POST http://my.api.url/posts\n * DELETE       => DELETE http://my.api.url/posts/123\n */\nexport default (apiUrl, httpClient = fetchUtils.fetchJson) => {\n    /**\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} { url, options } The HTTP request parameters\n     */\n    const convertDataRequestToHTTP = (type, resource, params) => {\n        const options = {};\n        options.headers = authHeader();\n        switch (type) {\n            case GET_LIST: {\n                const { page, perPage } = params.pagination;\n                options.url = `${apiUrl}/${resource}?page=${page}&pageSize=${perPage}`;\n                options.method = 'GET';\n                break;\n            }\n            case GET_ONE: {\n                options.url = `${apiUrl}/${resource}/${params.id}`;\n                options.method = 'GET';\n                break;\n            }\n            case GET_MANY: {\n                JSON.stringify({ id: params.ids });\n                let idStr = '';\n                params.ids.map((id) => idStr + `id=${id}`);\n                options.url = `${apiUrl}/${resource}?${idStr}}`;\n                options.method = 'GET';\n                break;\n            }\n            case GET_MANY_REFERENCE: {\n                const { page, perPage } = params.pagination;\n                options.url = `${apiUrl}/${resource}?page=${page}&pageSize=${perPage}`;\n                break;\n            }\n            case UPDATE:\n                options.url = `${apiUrl}/${resource}/${params.id}`;\n                options.method = 'PUT';\n                options.data = params.data;\n                break;\n            case CREATE:\n                options.url = `${apiUrl}/${resource}`;\n                options.method = 'POST';\n                options.data = params.data;\n                break;\n            case DELETE:\n                options.url = `${apiUrl}/${resource}/${params.id}`;\n                options.method = 'DELETE';\n                break;\n            default:\n                throw new Error(`Unsupported fetch action type ${type}`);\n        }\n        return { options };\n    };\n\n    /**\n     * @param {Object} response HTTP response from fetch()\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} Data response\n     */\n    const convertHTTPResponse = (response, type, resource, params) => {\n        const json = response.data;\n        switch (type) {\n            case GET_LIST:\n            case GET_MANY_REFERENCE:\n                if (!json.hasOwnProperty('length')) {\n                    throw new Error(\n                        'The numberOfElements property must be must be present in the Json response'\n                    );\n                }\n                return {\n                    data: json,\n                    total: parseInt(json.length, 10),\n                };\n            case CREATE:\n                return { data: { ...params.data, id: 0 } };\n            default:\n                return { data: json };\n        }\n    };\n\n    /**\n     * @param {string} type Request type, e.g GET_LIST\n     * @param {string} resource Resource name, e.g. \"posts\"\n     * @param {Object} payload Request parameters. Depends on the request type\n     * @returns {Promise} the Promise for a data response\n     */\n    return (type, resource, params) => {\n        // simple-rest doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\n        if (type === UPDATE_MANY) {\n            const myOptions = {};\n            myOptions.headers = authHeader();\n            myOptions.method = 'PUT';\n            return Promise.all(\n                params.ids.map((id) => {\n                    myOptions.data = params.data;\n                    return axios(myOptions);\n                })\n            ).then((responses) => ({\n                data: responses.map((response) => response.data),\n            }));\n        }\n        // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n        if (type === DELETE_MANY) {\n            const myOptions = {};\n            myOptions.headers = authHeader();\n            myOptions.method = 'DELETE';\n            return Promise.all(\n                params.ids.map((id) => {\n                    myOptions.url = `${apiUrl}/${resource}/${id}`;\n                    return axios(myOptions);\n                })\n            ).then((responses) => ({\n                data: responses.map((response) => response.data),\n            }));\n        }\n\n        const { options } = convertDataRequestToHTTP(type, resource, params);\n        return axios(options).then((response) =>\n            convertHTTPResponse(response, type, resource, params)\n        );\n    };\n};\n","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\User.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\services\\user.service.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\helpers\\authHeader.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\reportWebVitals.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\helpers\\index.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Club.js",["62","63","64"],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\AdminPage.jsx",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Room.js",["65"],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Group.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":1,"nodeType":"72","endLine":33,"endColumn":3},{"ruleId":"73","severity":1,"message":"74","line":30,"column":9,"nodeType":"75","messageId":"76","endLine":31,"endColumn":64},{"ruleId":"70","severity":1,"message":"77","line":27,"column":1,"nodeType":"72","endLine":151,"endColumn":3},{"ruleId":"78","severity":1,"message":"79","line":13,"column":5,"nodeType":"80","messageId":"81","endLine":13,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":13,"column":18,"nodeType":"80","messageId":"81","endLine":13,"endColumn":37},{"ruleId":"78","severity":1,"message":"83","line":13,"column":39,"nodeType":"80","messageId":"81","endLine":13,"endColumn":55},{"ruleId":"78","severity":1,"message":"82","line":12,"column":5,"nodeType":"80","messageId":"81","endLine":12,"endColumn":24},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","Assign arrow function to a variable before exporting as module default","no-unused-vars","'NumberInput' is defined but never used.","Identifier","unusedVar","'ReferenceArrayInput' is defined but never used.","'SelectArrayInput' is defined but never used.","no-global-assign","no-unsafe-negation"]