[{"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\index.js":"1","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\reportWebVitals.js":"2","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\App.js":"3","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\AdminPage.jsx":"4","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Group.js":"5","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Course.js":"6","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\User.js":"7","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Club.js":"8","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Event.js":"9","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Payment.js":"10","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Costs.js":"11","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Room.js":"12","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Agreement.js":"13","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\CustomDataProvider.jsx":"14","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\CustomAuthProvider.jsx":"15","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\services\\user.service.js":"16","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\helpers\\index.js":"17","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\helpers\\authHeader.js":"18"},{"size":461,"mtime":1610812554695,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1608771305093,"results":"21","hashOfConfig":"20"},{"size":137,"mtime":1608774352118,"results":"22","hashOfConfig":"20"},{"size":3280,"mtime":1612642483067,"results":"23","hashOfConfig":"20"},{"size":6176,"mtime":1613314528295,"results":"24","hashOfConfig":"20"},{"size":2443,"mtime":1611783468052,"results":"25","hashOfConfig":"20"},{"size":4444,"mtime":1612660785617,"results":"26","hashOfConfig":"20"},{"size":3576,"mtime":1613313965909,"results":"27","hashOfConfig":"20"},{"size":1371,"mtime":1612660650239,"results":"28","hashOfConfig":"20"},{"size":4060,"mtime":1612660721728,"results":"29","hashOfConfig":"20"},{"size":1525,"mtime":1611686902195,"results":"30","hashOfConfig":"20"},{"size":3821,"mtime":1613313514425,"results":"31","hashOfConfig":"20"},{"size":3035,"mtime":1612660838182,"results":"32","hashOfConfig":"20"},{"size":6736,"mtime":1612663665767,"results":"33","hashOfConfig":"20"},{"size":946,"mtime":1610898792106,"results":"34","hashOfConfig":"20"},{"size":2508,"mtime":1610899430790,"results":"35","hashOfConfig":"20"},{"size":29,"mtime":1608772806110,"results":"36","hashOfConfig":"20"},{"size":277,"mtime":1612642557677,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"f4z56b",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\index.js",[],["79","80"],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\reportWebVitals.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\App.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\AdminPage.jsx",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Group.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Course.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\User.js",["81"],"import React from 'react';\nimport {\n    BooleanField,\n    BooleanInput,\n    Create,\n    Datagrid,\n    DateField,\n    DateInput,\n    Edit,\n    EditButton,\n    EmailField,\n    FormTab,\n    FunctionField,\n    ImageField,\n    ImageInput,\n    List,\n    PasswordInput,\n    RichTextField,\n    Show,\n    Tab,\n    TabbedForm,\n    TabbedShowLayout,\n    TextField,\n    TextInput,\n} from 'react-admin';\n\nexport const UserList = (props) => (\n    <List {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <FunctionField\n                label=\"Name\"\n                render={(record) =>\n                    `${record.name} ${record.middleName} ${record.surname}`\n                }\n            />\n            <DateField\n                source=\"birthDay\"\n                options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n            />\n            <FunctionField\n                render={(render) =>\n                    render === null\n                        ? `not defined`\n                        : `${render.country},\\n\\r ${render.city},\\n\\r ${render.addressLine}`\n                }\n            />\n            <RichTextField source=\"additionalInfo\" />\n            <TextField source=\"userName\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"phoneNumber\" />\n            <DateField source=\"birthDay\" />\n            <ImageField source=\"photos\" />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport const UserShow = (props) => (\n    <Show {...props}>\n        <TabbedShowLayout rowClick=\"edit\">\n            <Tab label=\"Summary\">\n                <TextField source=\"id\" />\n                <FunctionField\n                    label=\"Name\"\n                    render={(record) =>\n                        `${record.name} ${record.middleName} ${record.surname}`\n                    }\n                />\n                <DateField\n                    source=\"birthDay\"\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\n                />\n\n                <RichTextField source=\"additionalInfo\" />\n                <TextField source=\"userName\" />\n                <EmailField source=\"email\" />\n                <TextField source=\"phoneNumber\" />\n                <BooleanField source=\"lockoutEnabled\" />\n                <ImageField source=\"photos\" />\n                <EditButton />\n            </Tab>\n            <Tab label=\"Address\">\n                <TextField source=\"country\" />\n                <TextField source=\"city\" />\n                <TextField source=\"addressLine\" />\n            </Tab>\n        </TabbedShowLayout>\n    </Show>\n);\n\nexport const UserEdit = (props) => (\n    <Edit {...props}>\n        <TabbedForm redirect=\"list\">\n            <FormTab label=\"Summary\">\n                <TextInput disabled source=\"id\" />\n                <TextInput source=\"name\" />\n                <TextInput source=\"middleName\" />\n                <TextInput source=\"surname\" />\n                <TextInput source=\"newPassword\" />\n                <DateInput source=\"birthDay\" label=\"Birth Day\" />\n                <TextInput source=\"additionalInfo\" />\n                <TextInput source=\"userName\" />\n                <TextInput source=\"email\" />\n                <TextInput source=\"phoneNumber\" />\n                <BooleanInput source=\"lockoutEnabled\" />\n                <ImageInput source=\"photos\" />\n            </FormTab>\n\n            <FormTab label=\"Address\">\n                <TextInput source=\"country\" />\n                <TextInput source=\"city\" />\n                <TextInput source=\"addressLine\" />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport const UserCreate = (props) => (\n    <Create {...props}>\n        <TabbedForm redirect=\"list\">\n            <FormTab label=\"Summary\">\n                <TextInput source=\"userName\" />\n                <TextInput source=\"password\" required />\n                <TextInput source=\"name\" />\n                <TextInput source=\"middleName\" />\n                <TextInput source=\"surname\" />\n                <DateInput source=\"birthDay\" />\n                <TextInput source=\"email\" />\n                <TextInput source=\"phoneNumber\" />\n            </FormTab>\n            <FormTab label=\"Address\">\n                <TextInput source=\"country\" />\n                <TextInput source=\"city\" />\n                <TextInput source=\"addressLine\" />\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Club.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Event.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Payment.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Costs.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Room.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\Agreement.js",["82"],"import React from 'react';\r\nimport {\r\n    Create,\r\n    Datagrid,\r\n    DateInput,\r\n    DeleteButton,\r\n    Edit,\r\n    EditButton,\r\n    FunctionField,\r\n    List,\r\n    ReferenceField, ReferenceInput, SelectInput,\r\n    Show,\r\n    SimpleForm,\r\n    SimpleShowLayout,\r\n    TextField,\r\n    TextInput,\r\n} from 'react-admin';\r\n\r\nexport const AgreementList = (props) => (\r\n    <List {...props}>\r\n        <Datagrid rowClick='show'>\r\n            <TextField source='id' />\r\n            <ReferenceField reference='users' source='userId'>\r\n                <FunctionField\r\n                    label='Name'\r\n                    render={(record) =>\r\n                        `${record.name} ${record.middleName} ${record.surname}`\r\n                    }\r\n                />\r\n            </ReferenceField>\r\n            <ReferenceField reference='courses' source='courseId'>\r\n                <TextField source='title' label='Course' />\r\n            </ReferenceField>\r\n            <TextField source=\"payment\"/>\r\n\r\n            <EditButton />\r\n            <DeleteButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const AgreementShow = (props) => (\r\n    <Show {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField source='id' />\r\n            <ReferenceField reference='users' source='userId'>\r\n                <FunctionField\r\n                    label='Name'\r\n                    render={(record) =>\r\n                        `${record.name} ${record.middleName} ${record.surname}`\r\n                    }\r\n                />\r\n            </ReferenceField>\r\n            <ReferenceField reference='courses' source='courseId'>\r\n                <TextField source='title' label='Club' />\r\n            </ReferenceField>\r\n            <TextField source=\"payment\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);\r\n\r\nexport const AgreementEdit = (props) => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source='id' />\r\n\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n                <SelectInput optionText={(record) =>\r\n                    `${record.name} ${record.middleName} ${record.surname}`\r\n                } />\r\n            </ReferenceInput>\r\n\r\n            <ReferenceInput label=\"Course\" source=\"courseId\" reference=\"courses\">\r\n                <SelectInput optionText=\"title\" />\r\n            </ReferenceInput>\r\n\r\n            <TextInput source='payment' />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const AgreementCreate = (props) => (\r\n    <Create {...props}>\r\n        <SimpleForm redirect='list'>\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n                <SelectInput optionText={record => `${record.name} ${record.middleName} ${record.surname}`} />\r\n            </ReferenceInput>\r\n\r\n            <ReferenceInput label=\"Course\" source=\"courseId\" reference=\"courses\">\r\n                <SelectInput optionText=\"title\" />\r\n            </ReferenceInput>\r\n\r\n            <TextInput source='payment' />\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\CustomDataProvider.jsx",["83"],"import {\n    CREATE,\n    DELETE,\n    DELETE_MANY,\n    fetchUtils,\n    GET_LIST,\n    GET_MANY,\n    GET_MANY_REFERENCE,\n    GET_ONE,\n    UPDATE,\n    UPDATE_MANY,\n} from 'react-admin';\nimport axios from 'axios';\nimport { authHeader } from '../../helpers';\nimport {stringify} from \"query-string\";\n\n/**\n * Maps react-admin queries to a REST API implemented\n *\n * @example\n * GET_LIST     => GET http://my.api.url/posts?page=0&pageSize=10\n * GET_ONE      => GET http://my.api.url/posts/123\n * GET_MANY     => GET http://my.api.url/posts?id=1234&id=5678\n * UPDATE       => PUT http://my.api.url/posts/123\n * CREATE       => POST http://my.api.url/posts\n * DELETE       => DELETE http://my.api.url/posts/123\n */\nexport default (apiUrl, httpClient = fetchUtils.fetchJson) => {\n    /**\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} { url, options } The HTTP request parameters\n     */\n    const convertDataRequestToHTTP = (type, resource, params) => {\n        const options = {};\n        options.headers = authHeader();\n        switch (type) {\n            case GET_LIST: {\n                // const { page, perPage } = params.pagination;\n                // options.url = `${apiUrl}/${resource}?page=${page}&pageSize=${perPage}`;\n                // options.method = 'GET';\n                // break;\n                const { field, order } = params.sort;\n                const { page, perPage } = params.pagination;\n                let query = {\n                    sort: JSON.stringify([field, order]),\n                    range: JSON.stringify([\n                        (page - 1) * perPage,\n                        page * perPage - 1,\n                    ]),\n                    filter: JSON.stringify(params.filter),\n                };\n\n                options.url = `${apiUrl}/${resource}?${stringify(query)}`;\n                options.method = 'GET';\n                break;\n            }\n            case GET_ONE: {\n                options.url = `${apiUrl}/${resource}/${params.id}`;\n                options.method = 'GET';\n                break;\n            }\n            case GET_MANY: {\n                JSON.stringify({ id: params.ids });\n                let idStr = '';\n                params.ids.map((id) => idStr + `id=${id}`);\n                options.url = `${apiUrl}/${resource}?${idStr}}`;\n                options.method = 'GET';\n                break;\n            }\n            case GET_MANY_REFERENCE: {\n                const { field, order } = params.sort;\n                const { page, perPage } = params.pagination;\n                let query = {\n                    sort: JSON.stringify([field, order]),\n                    [params.target]: params.id,\n                    range: JSON.stringify([\n                        (page - 1) * perPage,\n                        page * perPage - 1,\n                    ]),\n                    filter: JSON.stringify({[params.target]: params.id}),\n                };\n\n                options.url = `${apiUrl}/${resource}?${stringify(query)}`;\n                break;\n            }\n            case UPDATE:\n                options.url = `${apiUrl}/${resource}/${params.id}`;\n                options.method = 'PUT';\n                options.data = params.data;\n                break;\n            case CREATE:\n                options.url = `${apiUrl}/${resource}`;\n                options.method = 'POST';\n                options.data = params.data;\n                break;\n            case DELETE:\n                options.url = `${apiUrl}/${resource}/${params.id}`;\n                options.method = 'DELETE';\n                break;\n            default:\n                throw new Error(`Unsupported fetch action type ${type}`);\n        }\n        return { options };\n    };\n\n    /**\n     * @param {Object} response HTTP response from fetch()\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n     * @param {Object} params The data request params, depending on the type\n     * @returns {Object} Data response\n     */\n    const convertHTTPResponse = (response, type, resource, params) => {\n        const json = response.data;\n        switch (type) {\n            case GET_LIST:\n            case GET_MANY_REFERENCE:\n                if (!json.hasOwnProperty('length')) {\n                    throw new Error(\n                        'The numberOfElements property must be must be present in the Json response'\n                    );\n                }\n                return {\n                    data: json,\n                    total: parseInt(json.length, 10),\n                };\n            case CREATE:\n                return { data: { ...params.data, id: 0 } };\n            default:\n                return { data: json };\n        }\n    };\n\n    /**\n     * @param {string} type Request type, e.g GET_LIST\n     * @param {string} resource Resource name, e.g. \"posts\"\n     * @param {Object} payload Request parameters. Depends on the request type\n     * @returns {Promise} the Promise for a data response\n     */\n    return (type, resource, params) => {\n        // simple-rest doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\n        if (type === UPDATE_MANY) {\n            const myOptions = {};\n            myOptions.headers = authHeader();\n            myOptions.method = 'PUT';\n            return Promise.all(\n                params.ids.map((id) => {\n                    myOptions.data = params.data;\n                    return axios(myOptions);\n                })\n            ).then((responses) => ({\n                data: responses.map((response) => response.data),\n            }));\n        }\n        // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n        if (type === DELETE_MANY) {\n            const myOptions = {};\n            myOptions.headers = authHeader();\n            myOptions.method = 'DELETE';\n            return Promise.all(\n                params.ids.map((id) => {\n                    myOptions.url = `${apiUrl}/${resource}/${id}`;\n                    return axios(myOptions);\n                })\n            ).then((responses) => ({\n                data: responses.map((response) => response.data),\n            }));\n        }\n\n        const { options } = convertDataRequestToHTTP(type, resource, params);\n        return axios(options).then((response) =>\n            convertHTTPResponse(response, type, resource, params)\n        );\n    };\n};\n","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\Admin\\components\\CustomAuthProvider.jsx",["84","85"],"import { userService} from \"../../services/user.service\"\r\n\r\nexport default {\r\n\r\n    login: ({username, password}) => {\r\n\r\n    return userService.login(username, password)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.data;\r\n            });\r\n    },\r\n    checkError: (error) => {\r\n        console.error(error)\r\n    },\r\n    checkAuth: () => {\r\n        return localStorage.getItem('user') ? Promise.resolve() : Promise.reject();\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('user');\r\n        return Promise.resolve();\r\n    },\r\n    getIdentity: (error) => {\r\n    },\r\n    getPermissions: () => {\r\n        return Promise.resolve();\r\n        const role = localStorage.getItem('permissions');\r\n        return role ? Promise.resolve(role) : Promise.reject();\r\n    }\r\n};","C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\services\\user.service.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\helpers\\index.js",[],"C:\\Users\\Daniel\\Desktop\\University\\4th course\\Diplomcheg\\admin\\src\\helpers\\authHeader.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":17,"column":5,"nodeType":"92","messageId":"93","endLine":17,"endColumn":18},{"ruleId":"90","severity":1,"message":"94","line":5,"column":5,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":28,"column":1,"nodeType":"97","endLine":177,"endColumn":3},{"ruleId":"95","severity":1,"message":"98","line":3,"column":1,"nodeType":"97","endLine":32,"endColumn":3},{"ruleId":"99","severity":1,"message":"100","line":29,"column":9,"nodeType":"101","messageId":"102","endLine":30,"endColumn":64},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'PasswordInput' is defined but never used.","Identifier","unusedVar","'DateInput' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","no-global-assign","no-unsafe-negation"]