[{"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\index.js":"1","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\App.js":"2","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\reportWebVitals.js":"3","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\AdminPage.jsx":"4","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\User.js":"5","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Room.js":"6","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Event.js":"7","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Club.js":"8","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Payment.js":"9","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Group.js":"10","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Agreement.js":"11","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Costs.js":"12","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Course.js":"13","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\CustomAuthProvider.jsx":"14","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\CustomDataProvider.jsx":"15","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\services\\user.service.js":"16","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\helpers\\index.js":"17","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\helpers\\authHeader.js":"18"},{"size":461,"mtime":1610443255925,"results":"19","hashOfConfig":"20"},{"size":147,"mtime":1609840712546,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1609840712550,"results":"22","hashOfConfig":"20"},{"size":3280,"mtime":1612786655278,"results":"23","hashOfConfig":"20"},{"size":4601,"mtime":1612786530264,"results":"24","hashOfConfig":"20"},{"size":3967,"mtime":1612777317231,"results":"25","hashOfConfig":"20"},{"size":2110,"mtime":1612784171007,"results":"26","hashOfConfig":"20"},{"size":3704,"mtime":1612777317205,"results":"27","hashOfConfig":"20"},{"size":4865,"mtime":1612784138856,"results":"28","hashOfConfig":"20"},{"size":6093,"mtime":1612777317226,"results":"29","hashOfConfig":"20"},{"size":3035,"mtime":1612777317203,"results":"30","hashOfConfig":"20"},{"size":2329,"mtime":1612784084887,"results":"31","hashOfConfig":"20"},{"size":2528,"mtime":1612176049872,"results":"32","hashOfConfig":"20"},{"size":946,"mtime":1611153304506,"results":"33","hashOfConfig":"20"},{"size":6913,"mtime":1612777317217,"results":"34","hashOfConfig":"20"},{"size":2508,"mtime":1611153304509,"results":"35","hashOfConfig":"20"},{"size":29,"mtime":1609840712548,"results":"36","hashOfConfig":"20"},{"size":277,"mtime":1610450098452,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1qxtv97",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\index.js",[],["79","80"],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\App.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\reportWebVitals.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\AdminPage.jsx",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\User.js",["81"],"import React from 'react';\r\nimport {\r\n    BooleanField,\r\n    BooleanInput,\r\n    Create,\r\n    Datagrid,\r\n    DateField,\r\n    DateInput,\r\n    Edit,\r\n    EditButton,\r\n    EmailField,\r\n    FormTab,\r\n    FunctionField,\r\n    ImageField,\r\n    ImageInput,\r\n    List,\r\n    PasswordInput,\r\n    RichTextField,\r\n    Show,\r\n    Tab,\r\n    TabbedForm,\r\n    TabbedShowLayout,\r\n    TextField,\r\n    TextInput,\r\n} from 'react-admin';\r\n\r\nexport const UserList = (props) => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <FunctionField\r\n                label=\"Name\"\r\n                render={(record) =>\r\n                    `${record.name ?? \"\"} ${record.middleName ?? \"\"} ${record.surname ?? \"\"}`\r\n                }\r\n            />\r\n            <DateField\r\n                source=\"birthDay\"\r\n                options={{ year: 'numeric', month: 'long', day: 'numeric' }}\r\n            />\r\n            <FunctionField\r\n                render={(render) =>\r\n                    render === null\r\n                        ? `not defined`\r\n                        : `${render.country},\\n\\r ${render.city},\\n\\r ${render.addressLine}`\r\n                }\r\n            />\r\n            <RichTextField source=\"additionalInfo\" />\r\n            <TextField source=\"userName\" />\r\n            <EmailField source=\"email\" />\r\n            <TextField source=\"phoneNumber\" />\r\n            <DateField source=\"birthDay\" />\r\n            <ImageField source=\"photos\" />\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const UserShow = (props) => (\r\n    <Show {...props}>\r\n        <TabbedShowLayout rowClick=\"edit\">\r\n            <Tab label=\"Summary\">\r\n                <TextField source=\"id\" />\r\n                <FunctionField\r\n                    label=\"Name\"\r\n                    render={(record) =>\r\n                        `${record.name} ${record.middleName} ${record.surname}`\r\n                    }\r\n                />\r\n                <DateField\r\n                    source=\"birthDay\"\r\n                    options={{ year: 'numeric', month: 'long', day: 'numeric' }}\r\n                />\r\n\r\n                <RichTextField source=\"additionalInfo\" />\r\n                <TextField source=\"userName\" />\r\n                <EmailField source=\"email\" />\r\n                <TextField source=\"phoneNumber\" />\r\n                <BooleanField source=\"lockoutEnabled\" />\r\n                <ImageField source=\"photos\" />\r\n                <EditButton />\r\n            </Tab>\r\n            <Tab label=\"Address\">\r\n                <TextField source=\"country\" />\r\n                <TextField source=\"city\" />\r\n                <TextField source=\"addressLine\" />\r\n            </Tab>\r\n        </TabbedShowLayout>\r\n    </Show>\r\n);\r\n\r\nexport const UserEdit = (props) => (\r\n    <Edit {...props}>\r\n        <TabbedForm redirect=\"list\">\r\n            <FormTab label=\"Summary\">\r\n                <TextInput disabled source=\"id\" />\r\n                <TextInput source=\"name\" />\r\n                <TextInput source=\"middleName\" />\r\n                <TextInput source=\"surname\" />\r\n                <TextInput source=\"newPassword\" />\r\n                <DateInput source=\"birthDay\" label=\"Birth Day\" />\r\n                <TextInput source=\"additionalInfo\" />\r\n                <TextInput source=\"userName\" />\r\n                <TextInput source=\"email\" />\r\n                <TextInput source=\"phoneNumber\" />\r\n                <BooleanInput source=\"lockoutEnabled\" />\r\n                <ImageInput source=\"photos\" />\r\n            </FormTab>\r\n\r\n            <FormTab label=\"Address\">\r\n                <TextInput source=\"country\" />\r\n                <TextInput source=\"city\" />\r\n                <TextInput source=\"addressLine\" />\r\n            </FormTab>\r\n        </TabbedForm>\r\n    </Edit>\r\n);\r\n\r\nexport const UserCreate = (props) => (\r\n    <Create {...props}>\r\n        <TabbedForm redirect=\"list\">\r\n            <FormTab label=\"Summary\">\r\n                <TextInput source=\"userName\" />\r\n                <TextInput source=\"password\" required />\r\n                <TextInput source=\"name\" />\r\n                <TextInput source=\"middleName\" />\r\n                <TextInput source=\"surname\" />\r\n                <DateInput source=\"birthDay\" />\r\n                <TextInput source=\"email\" />\r\n                <TextInput source=\"phoneNumber\" />\r\n            </FormTab>\r\n            <FormTab label=\"Address\">\r\n                <TextInput source=\"country\" />\r\n                <TextInput source=\"city\" />\r\n                <TextInput source=\"addressLine\" />\r\n            </FormTab>\r\n        </TabbedForm>\r\n    </Create>\r\n);\r\n","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Room.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Event.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Club.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Payment.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Group.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Agreement.js",["82"],"import React from 'react';\r\nimport {\r\n    Create,\r\n    Datagrid,\r\n    DateInput,\r\n    DeleteButton,\r\n    Edit,\r\n    EditButton,\r\n    FunctionField,\r\n    List,\r\n    ReferenceField, ReferenceInput, SelectInput,\r\n    Show,\r\n    SimpleForm,\r\n    SimpleShowLayout,\r\n    TextField,\r\n    TextInput,\r\n} from 'react-admin';\r\n\r\nexport const AgreementList = (props) => (\r\n    <List {...props}>\r\n        <Datagrid rowClick='show'>\r\n            <TextField source='id' />\r\n            <ReferenceField reference='users' source='userId'>\r\n                <FunctionField\r\n                    label='Name'\r\n                    render={(record) =>\r\n                        `${record.name} ${record.middleName} ${record.surname}`\r\n                    }\r\n                />\r\n            </ReferenceField>\r\n            <ReferenceField reference='courses' source='courseId'>\r\n                <TextField source='title' label='Course' />\r\n            </ReferenceField>\r\n            <TextField source=\"payment\"/>\r\n\r\n            <EditButton />\r\n            <DeleteButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const AgreementShow = (props) => (\r\n    <Show {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField source='id' />\r\n            <ReferenceField reference='users' source='userId'>\r\n                <FunctionField\r\n                    label='Name'\r\n                    render={(record) =>\r\n                        `${record.name} ${record.middleName} ${record.surname}`\r\n                    }\r\n                />\r\n            </ReferenceField>\r\n            <ReferenceField reference='courses' source='courseId'>\r\n                <TextField source='title' label='Club' />\r\n            </ReferenceField>\r\n            <TextField source=\"payment\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);\r\n\r\nexport const AgreementEdit = (props) => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source='id' />\r\n\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n                <SelectInput optionText={(record) =>\r\n                    `${record.name} ${record.middleName} ${record.surname}`\r\n                } />\r\n            </ReferenceInput>\r\n\r\n            <ReferenceInput label=\"Course\" source=\"courseId\" reference=\"courses\">\r\n                <SelectInput optionText=\"title\" />\r\n            </ReferenceInput>\r\n\r\n            <TextInput source='payment' />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const AgreementCreate = (props) => (\r\n    <Create {...props}>\r\n        <SimpleForm redirect='list'>\r\n            <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\">\r\n                <SelectInput optionText={record => `${record.name} ${record.middleName} ${record.surname}`} />\r\n            </ReferenceInput>\r\n\r\n            <ReferenceInput label=\"Course\" source=\"courseId\" reference=\"courses\">\r\n                <SelectInput optionText=\"title\" />\r\n            </ReferenceInput>\r\n\r\n            <TextInput source='payment' />\r\n        </SimpleForm>\r\n    </Create>\r\n);\r\n","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Costs.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\Course.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\CustomAuthProvider.jsx",["83","84"],"import { userService} from \"../../services/user.service\"\r\n\r\nexport default {\r\n\r\n    login: ({username, password}) => {\r\n\r\n    return userService.login(username, password)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.data;\r\n            });\r\n    },\r\n    checkError: (error) => {\r\n        console.error(error)\r\n    },\r\n    checkAuth: () => {\r\n        return localStorage.getItem('user') ? Promise.resolve() : Promise.reject();\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('user');\r\n        return Promise.resolve();\r\n    },\r\n    getIdentity: (error) => {\r\n    },\r\n    getPermissions: () => {\r\n        return Promise.resolve();\r\n        const role = localStorage.getItem('permissions');\r\n        return role ? Promise.resolve(role) : Promise.reject();\r\n    }\r\n};","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\Admin\\components\\CustomDataProvider.jsx",["85"],"import {\r\n    CREATE,\r\n    DELETE,\r\n    DELETE_MANY,\r\n    fetchUtils,\r\n    GET_LIST,\r\n    GET_MANY,\r\n    GET_MANY_REFERENCE,\r\n    GET_ONE,\r\n    UPDATE,\r\n    UPDATE_MANY,\r\n} from 'react-admin';\r\nimport axios from 'axios';\r\nimport { authHeader } from '../../helpers';\r\nimport {stringify} from \"query-string\";\r\n\r\n/**\r\n * Maps react-admin queries to a REST API implemented\r\n *\r\n * @example\r\n * GET_LIST     => GET http://my.api.url/posts?page=0&pageSize=10\r\n * GET_ONE      => GET http://my.api.url/posts/123\r\n * GET_MANY     => GET http://my.api.url/posts?id=1234&id=5678\r\n * UPDATE       => PUT http://my.api.url/posts/123\r\n * CREATE       => POST http://my.api.url/posts\r\n * DELETE       => DELETE http://my.api.url/posts/123\r\n */\r\nexport default (apiUrl, httpClient = fetchUtils.fetchJson) => {\r\n    /**\r\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n     * @param {Object} params The data request params, depending on the type\r\n     * @returns {Object} { url, options } The HTTP request parameters\r\n     */\r\n    const convertDataRequestToHTTP = (type, resource, params) => {\r\n        const options = {};\r\n        options.headers = authHeader();\r\n        switch (type) {\r\n            case GET_LIST: {\r\n                // const { page, perPage } = params.pagination;\r\n                // options.url = `${apiUrl}/${resource}?page=${page}&pageSize=${perPage}`;\r\n                // options.method = 'GET';\r\n                // break;\r\n                const { field, order } = params.sort;\r\n                const { page, perPage } = params.pagination;\r\n                let query = {\r\n                    sort: JSON.stringify([field, order]),\r\n                    range: JSON.stringify([\r\n                        (page - 1) * perPage,\r\n                        page * perPage - 1,\r\n                    ]),\r\n                    filter: JSON.stringify(params.filter),\r\n                };\r\n\r\n                options.url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n                options.method = 'GET';\r\n                break;\r\n            }\r\n            case GET_ONE: {\r\n                options.url = `${apiUrl}/${resource}/${params.id}`;\r\n                options.method = 'GET';\r\n                break;\r\n            }\r\n            case GET_MANY: {\r\n                JSON.stringify({ id: params.ids });\r\n                let idStr = '';\r\n                params.ids.map((id) => idStr + `id=${id}`);\r\n                options.url = `${apiUrl}/${resource}?${idStr}}`;\r\n                options.method = 'GET';\r\n                break;\r\n            }\r\n            case GET_MANY_REFERENCE: {\r\n                const { field, order } = params.sort;\r\n                const { page, perPage } = params.pagination;\r\n                let query = {\r\n                    sort: JSON.stringify([field, order]),\r\n                    [params.target]: params.id,\r\n                    range: JSON.stringify([\r\n                        (page - 1) * perPage,\r\n                        page * perPage - 1,\r\n                    ]),\r\n                    filter: JSON.stringify({[params.target]: params.id}),\r\n                };\r\n\r\n                options.url = `${apiUrl}/${resource}?${stringify(query)}`;\r\n                break;\r\n            }\r\n            case UPDATE:\r\n                options.url = `${apiUrl}/${resource}/${params.id}`;\r\n                options.method = 'PUT';\r\n                options.data = params.data;\r\n                break;\r\n            case CREATE:\r\n                options.url = `${apiUrl}/${resource}`;\r\n                options.method = 'POST';\r\n                options.data = params.data;\r\n                break;\r\n            case DELETE:\r\n                options.url = `${apiUrl}/${resource}/${params.id}`;\r\n                options.method = 'DELETE';\r\n                break;\r\n            default:\r\n                throw new Error(`Unsupported fetch action type ${type}`);\r\n        }\r\n        return { options };\r\n    };\r\n\r\n    /**\r\n     * @param {Object} response HTTP response from fetch()\r\n     * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\r\n     * @param {String} resource Name of the resource to fetch, e.g. 'posts'\r\n     * @param {Object} params The data request params, depending on the type\r\n     * @returns {Object} Data response\r\n     */\r\n    const convertHTTPResponse = (response, type, resource, params) => {\r\n        const json = response.data;\r\n        switch (type) {\r\n            case GET_LIST:\r\n            case GET_MANY_REFERENCE:\r\n                if (!json.hasOwnProperty('length')) {\r\n                    throw new Error(\r\n                        'The numberOfElements property must be must be present in the Json response'\r\n                    );\r\n                }\r\n                return {\r\n                    data: json,\r\n                    total: parseInt(json.length, 10),\r\n                };\r\n            case CREATE:\r\n                return { data: { ...params.data, id: 0 } };\r\n            default:\r\n                return { data: json };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {string} type Request type, e.g GET_LIST\r\n     * @param {string} resource Resource name, e.g. \"posts\"\r\n     * @param {Object} payload Request parameters. Depends on the request type\r\n     * @returns {Promise} the Promise for a data response\r\n     */\r\n    return (type, resource, params) => {\r\n        // simple-rest doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\r\n        if (type === UPDATE_MANY) {\r\n            const myOptions = {};\r\n            myOptions.headers = authHeader();\r\n            myOptions.method = 'PUT';\r\n            return Promise.all(\r\n                params.ids.map((id) => {\r\n                    myOptions.data = params.data;\r\n                    return axios(myOptions);\r\n                })\r\n            ).then((responses) => ({\r\n                data: responses.map((response) => response.data),\r\n            }));\r\n        }\r\n        // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\r\n        if (type === DELETE_MANY) {\r\n            const myOptions = {};\r\n            myOptions.headers = authHeader();\r\n            myOptions.method = 'DELETE';\r\n            return Promise.all(\r\n                params.ids.map((id) => {\r\n                    myOptions.url = `${apiUrl}/${resource}/${id}`;\r\n                    return axios(myOptions);\r\n                })\r\n            ).then((responses) => ({\r\n                data: responses.map((response) => response.data),\r\n            }));\r\n        }\r\n\r\n        const { options } = convertDataRequestToHTTP(type, resource, params);\r\n        return axios(options).then((response) =>\r\n            convertHTTPResponse(response, type, resource, params)\r\n        );\r\n    };\r\n};\r\n","C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\services\\user.service.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\helpers\\index.js",[],"C:\\Users\\danik\\Desktop\\Work\\it_club\\it.club.system.admin\\src\\helpers\\authHeader.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":17,"column":5,"nodeType":"92","messageId":"93","endLine":17,"endColumn":18},{"ruleId":"90","severity":1,"message":"94","line":5,"column":5,"nodeType":"92","messageId":"93","endLine":5,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":3,"column":1,"nodeType":"97","endLine":32,"endColumn":3},{"ruleId":"98","severity":1,"message":"99","line":29,"column":9,"nodeType":"100","messageId":"101","endLine":30,"endColumn":64},{"ruleId":"95","severity":1,"message":"102","line":28,"column":1,"nodeType":"97","endLine":177,"endColumn":3},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'PasswordInput' is defined but never used.","Identifier","unusedVar","'DateInput' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]